{"version":3,"sources":["components/GameTile.tsx","hooks/useKeyPress.ts","utils.ts","App.tsx","index.tsx"],"names":["fruits","StyledGameTile","styled","div","props","tile","player","playerId","id","GameTile","children","fruit","useMemo","Math","floor","random","length","useKeyPress","targetKey","onKeyPressed","downHandler","useCallback","key","e","upHandler","useEffect","window","addEventListener","removeEventListener","SERVER_IP","process","socketConnection","Manager","socket","App","useState","board","setBoard","youWin","setYouWin","useRef","current","io","on","console","log","error","game","winner","onArrowLeft","emit","onArrowRight","onArrowUp","onArrowDown","className","style","display","map","x","i","y","j","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03bf03c4.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from '@emotion/styled'\n\nexport type Direction = 'up' | 'down' | 'left' | 'right'\n\nexport type Player = {\n  id: string\n  direction: Direction\n  snake: BoardPosition[]\n}\n\nexport type BoardPosition = [x: number, y: number]\n\nexport type Tile = {\n  player: Player | null\n  fruit: boolean\n  empty: boolean\n}\n\ninterface GameTileProps {\n  children?: React.ReactNode\n  tile: Tile\n  playerId: string\n}\n\nconst fruits = [\"üçì\", \"üçá\", \"üçà\", \"üçâ\", \"üçä\", \"üçã\", \"üçå\", \"üçç\", \"ü•≠\", \"üçé\", \"üçè\", \"üçê\", \"üçë\", \"üçí\"]\n\nconst StyledGameTile = styled.div<GameTileProps>`\n  width: 25px;\n  height: 25px;\n  border: 1px solid white;\n  background-color: ${props => props.tile.player ? props.playerId === props.tile.player.id ? 'deepskyblue' : 'white' : 'rgba(0,0,0,0)'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const GameTile = ({ children, tile, playerId }: GameTileProps) => {\n  const fruit = useMemo(() => fruits[Math.floor(Math.random() * fruits.length)], [])\n  \n  return (\n    <StyledGameTile tile={tile} playerId={playerId}>\n      {tile.fruit && fruit}\n      {children}\n    </StyledGameTile>\n  )\n}\n","import { useEffect, useCallback } from \"react\"\n\nexport function useKeyPress(targetKey: string, onKeyPressed: (e: KeyboardEvent) => void) {\n  const downHandler = useCallback(({ key, ...e }: KeyboardEvent) => {\n    if (key === targetKey) {\n      onKeyPressed({ key, ...e })\n    }\n  }, [targetKey, onKeyPressed])\n\n  // If released key is our target key then set to false\n  const upHandler = useCallback(({ key, ...e }: KeyboardEvent) => {\n    if (key === targetKey) {\n      onKeyPressed({ key, ...e })\n    }\n  }, [targetKey, onKeyPressed])\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [downHandler, upHandler])\n}","export const SERVER_IP = process.env.SERVER_IP","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nimport { Manager} from \"socket.io-client\";\nimport { GameTile, Player, Tile } from './components/GameTile';\nimport { useKeyPress } from './hooks/useKeyPress';\nimport { SERVER_IP } from './utils';\n\ntype Board = Tile[][]\n\ninterface GameStatus {\n  board: Board\n  players: [player1: Player, player2: Player]\n  winner: Player['id'] | 'draw' | null\n}\n\nconst manager = new Manager(`ws://${SERVER_IP}`);\nconst socketConnection = manager.socket(\"/\");\n\nfunction App() {\n  const [board, setBoard] = useState<Board>()  \n  const [youWin, setYouWin] = useState<'win' | 'lose' | 'draw'| null >(null)  \n  const socket = useRef(socketConnection)\n\n  useEffect(() => {\n    socket.current.io.on(\"connect\", () => {\n      console.log(`connect ${socket.current.id}`);\n    });\n    socket.current.io.on(\"error\", (error: any) => {\n      console.error(error)\n      // socket.current.close()\n      // set user disconnected and show some error\n    });\n  }, [])\n\n  useEffect(() => {\n    socket.current.on(\"game-status\", (game: GameStatus) => {\n      console.log(game);\n      if(game.winner !== null && typeof(game.winner) === 'string'){    \n        setYouWin(game.winner === 'draw' ? 'draw' : (game.winner === socket.current.id ? 'win' : 'lose'))\n      }\n      setBoard(game.board)      \n    });\n  }, [])\n\n  const onArrowLeft = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'left')\n  }, [])\n  const onArrowRight = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'right')\n  }, [])\n  const onArrowUp = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'up')\n  }, [])\n  const onArrowDown = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'down')\n  }, [])\n  \n  useKeyPress('ArrowLeft', onArrowLeft)\n  useKeyPress('ArrowRight', onArrowRight)\n  useKeyPress('ArrowUp', onArrowUp)\n  useKeyPress('ArrowDown', onArrowDown)\n  console.log(youWin)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>Welcome</div>\n        <div>\n          {youWin !== null && (\n            youWin === 'draw' ? 'Draw' : (youWin === 'win' ? 'You Win' : 'You Lose')\n          )}\n        </div>\n        <div style={{ display: 'flex' }}>\n          {board && (\n            board.map((x, i) =>\n              <div key={i}>\n                {x.map((y, j) => (\n                  <GameTile tile={y} playerId={socket.current.id} key={j}>\n                  </GameTile>\n                ))}\n              </div>\n            )\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}