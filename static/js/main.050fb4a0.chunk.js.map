{"version":3,"sources":["components/GameTile.tsx","hooks/useKeyPress.ts","utils.ts","App.tsx","index.tsx"],"names":["fruits","StyledGameTile","styled","div","props","tile","player","playerId","id","GameTile","React","memo","children","fruit","useMemo","Math","floor","random","length","useKeyPress","targetKey","onKeyPressed","downHandler","useCallback","key","e","upHandler","useEffect","window","addEventListener","removeEventListener","SERVER_WS_URI","process","socketConnection","Manager","socket","App","useState","board","setBoard","youWin","setYouWin","useRef","current","io","on","console","log","error","game","winner","boardX","boardY","Array","fill","map","_","x","__","y","empty","position","s","printFruits","players","snake","printPlayers","onArrowLeft","emit","onArrowRight","onArrowUp","onArrowDown","className","style","display","i","j","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.050fb4a0.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from '@emotion/styled'\n\nexport type Direction = 'up' | 'down' | 'left' | 'right'\n\nexport type Player = {\n  id: string\n  direction: Direction\n  snake: BoardPosition[]\n}\n\nexport type BoardPosition = [x: number, y: number]\n\nexport type Tile = {\n  player: Player | null\n  fruit: boolean\n  empty: boolean\n}\n\ninterface GameTileProps {\n  children?: React.ReactNode\n  tile: Tile\n  playerId: string\n}\n\nconst fruits = [\"üçì\", \"üçá\", \"üçà\", \"üçâ\", \"üçä\", \"üçã\", \"üçå\", \"üçç\", \"ü•≠\", \"üçé\", \"üçè\", \"üçê\", \"üçë\", \"üçí\"]\n\nconst StyledGameTile = styled.div<GameTileProps>`\n  width: 25px;\n  height: 25px;\n  border: 1px solid white;\n  background-color: ${props => props.tile.player ? props.playerId === props.tile.player.id ? 'deepskyblue' : 'white' : 'rgba(0,0,0,0)'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const GameTile = React.memo(({ children, tile, playerId }: GameTileProps) => {\n  const fruit = useMemo(() => fruits[Math.floor(Math.random() * fruits.length)], [])\n  \n  return (\n    <StyledGameTile tile={tile} playerId={playerId}>\n      {tile.fruit && fruit}\n      {children}\n    </StyledGameTile>\n  )\n})\n","import { useEffect, useCallback } from \"react\"\n\nexport function useKeyPress(targetKey: string, onKeyPressed: (e: KeyboardEvent) => void) {\n  const downHandler = useCallback(({ key, ...e }: KeyboardEvent) => {\n    if (key === targetKey) {\n      onKeyPressed({ key, ...e })\n    }\n  }, [targetKey, onKeyPressed])\n\n  // If released key is our target key then set to false\n  const upHandler = useCallback(({ key, ...e }: KeyboardEvent) => {\n    if (key === targetKey) {\n      onKeyPressed({ key, ...e })\n    }\n  }, [targetKey, onKeyPressed])\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [downHandler, upHandler])\n}","export const SERVER_IP = process.env.REACT_APP_SERVER_IP\n\nexport const isDev = process.env.NODE_ENV === 'development'\n\nexport const isProd = process.env.NODE_ENV === 'production'\n\nexport const SERVER_WS_URI = `${isProd ? 'wss' : 'ws'}://${SERVER_IP}`","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { Manager } from \"socket.io-client\"\nimport { GameTile, Player, Tile } from './components/GameTile'\nimport { useKeyPress } from './hooks/useKeyPress'\nimport { SERVER_WS_URI } from './utils'\n\nimport './App.css'\n\ntype Board = Tile[][]\n\nexport type BoardPosition = [x: number, y: number]\n\ntype Fruit = BoardPosition\n\ninterface GameStatus {\n  // board: Board\n  boardX: number\n  boardY: number\n  players: [player1: Player, player2: Player]\n  fruits: Fruit[]\n  winner: Player['id'] | 'draw' | null\n}\n\nexport const getNewBoard = (boardX: number, boardY: number): Board =>\n  new Array(boardX).fill('')\n    .map((_, x) => new Array(boardY).fill('')\n      .map((__, y) => ({ player: null, fruit: false, empty: true, position: [x, y] }))\n    )\n\n\nconst printPlayers = (board: Board, players: Player[]) => {\n  for (const player of players) {\n    for (const s of player.snake) {\n      board[s[0]][s[1]] = {\n        ...board[s[0]][s[1]],\n        player,\n        empty: false,\n        fruit: false,\n      }\n    }\n  }\n  return board\n}\nconst printFruits = (board: Board, fruits: BoardPosition[]) => {\n  for (const s of fruits) {\n    board[s[0]][s[1]] = {\n      ...board[s[0]][s[1]],\n      player: null,\n      empty: false,\n      fruit: true,\n    }\n  }\n  return board\n}\n\n\nconst manager = new Manager(SERVER_WS_URI);\nconst socketConnection = manager.socket(\"/\");\n\nfunction App() {\n  const [board, setBoard] = useState<Board>()\n  const [youWin, setYouWin] = useState<'win' | 'lose' | 'draw' | null>(null)\n  const socket = useRef(socketConnection)\n\n  useEffect(() => {\n    socket.current.io.on(\"connect\", () => {\n      console.log(`connect ${socket.current.id}`);\n    });\n    socket.current.io.on(\"error\", (error: any) => {\n      console.error(error)\n      // socket.current.close()\n      // set user disconnected and show some error\n    });\n  }, [])\n\n  useEffect(() => {\n    socket.current.on(\"game-status\", (game: GameStatus) => {\n      if (game.winner !== null && typeof (game.winner) === 'string') {\n        setYouWin(game.winner === 'draw' ? 'draw' : (game.winner === socket.current.id ? 'win' : 'lose'))\n      }\n      let board = getNewBoard(game.boardX, game.boardY)\n      board = printPlayers(board, game.players)\n      board = printFruits(board, game.fruits)\n      setBoard(board)\n    });\n  }, [])\n\n  const onArrowLeft = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'left')\n  }, [])\n  const onArrowRight = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'right')\n  }, [])\n  const onArrowUp = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'up')\n  }, [])\n  const onArrowDown = useCallback((e: KeyboardEvent) => {\n    socket.current.emit('move-player', socket.current.id, 'down')\n  }, [])\n\n  useKeyPress('ArrowLeft', onArrowLeft)\n  useKeyPress('ArrowRight', onArrowRight)\n  useKeyPress('ArrowUp', onArrowUp)\n  useKeyPress('ArrowDown', onArrowDown)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>Welcome</div>\n        <div>\n          {youWin !== null && (\n            youWin === 'draw' ? 'Draw' : (youWin === 'win' ? 'You Win' : 'You Lose')\n          )}\n        </div>\n        <div style={{ display: 'flex' }}>\n          {board && (\n            board.map((x, i) =>\n              <div key={i}>\n                {x.map((y, j) => (\n                  <GameTile tile={y} playerId={socket.current.id} key={j}>\n                  </GameTile>\n                ))}\n              </div>\n            )\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}